import type { CollectionConfig, } from 'src/types/admin'

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
 */
export const collectionsConfig: Record<string, CollectionConfig> = {
  // –ö–æ–ª–ª–µ–∫—Ü–∏—è carousel –∏–∑ carousel.service.ts
  carousel: {
    name: 'carousel',
    label: '–ü—Ä–æ–¥—É–∫—Ç—ã',
    icon: 'inventory_2',
    searchable: true,
    sortable: true,
    fields: [
      {
        name: 'img',
        label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        type: 'url',
        required: true,
        placeholder: 'https://cdn.quasar.dev/img/parallax1.jpg',
      },
      {
        name: 'info',
        label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        type: 'text',
        required: true,
        placeholder: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è',
      },
      {
        name: 'label',
        label: '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞',
        type: 'textarea',
        required: true,
        placeholder: '–ö—Ä–µ–º - –≥–µ–ª—å –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—â–∏–π –¥–ª—è –≤–µ–∫ —Å –±–æ—Ç—É–ª–æ–ø–æ–¥–æ–±–Ω—ã–º –Ω–µ–π—Ä–æ–ø–µ–ø—Ç–∏–¥–æ–º, 30 –º–ª –∞—Ä–æ–º–∞—Ç Blanche (–ø–æ –º–æ—Ç–∏–≤–∞–º BYREDO BLANCHE)',
      },
      {
        name: 'link',
        label: '–°—Å—ã–ª–∫–∞',
        type: 'url',
        required: true,
        placeholder: 'https://example.com/tech',
      },
    ],
    columns: [
      {
        name: 'img',
        label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        field: 'img',
        align: 'center',
        sortable: false,
        format: (val: unknown) => val ? 'üñºÔ∏è' : '',
      },
      {
        name: 'info',
        label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        field: 'info',
        required: true,
        align: 'left',
        sortable: true,
        format: (val: unknown) => {
          const str = String(val)

          return str.length > 35 ? str.substring(0, 35) + '...' : str
        },
      },
      {
        name: 'label',
        label: '–ù–∞–∑–≤–∞–Ω–∏–µ',
        field: 'label',
        required: true,
        align: 'left',
        sortable: true,
        format: (val: unknown) => {
          const str = String(val)

          return str.length > 30 ? str.substring(0, 30) + '...' : str
        },
      },
      {
        name: 'link',
        label: '–°—Å—ã–ª–∫–∞',
        field: 'link',
        align: 'center',
        sortable: false,
        format: (val: unknown) => val ? 'üîó' : '',
      },
      {
        name: 'actions',
        label: '–î–µ–π—Å—Ç–≤–∏—è',
        field: 'actions',
        align: 'center',
      },
    ],
  },

  // –ö–æ–ª–ª–µ–∫—Ü–∏—è slides –∏–∑ slides.service.ts
  slides: {
    name: 'slides',
    label: '–°–ª–∞–π–¥—ã',
    icon: 'slideshow',
    searchable: true,
    sortable: true,
    fields: [
      {
        name: 'img',
        label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        type: 'url',
        required: true,
        placeholder: 'https://cdn.quasar.dev/img/mountains.jpg',
      },
      {
        name: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
        type: 'text',
        required: true,
        placeholder: 'Mountains3',
      },
      {
        name: 'subtitle',
        label: '–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫',
        type: 'text',
        required: true,
        placeholder: 'Majestic peaks and valleys',
      },
    ],
    columns: [
      {
        name: 'img',
        label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        field: 'img',
        align: 'center',
        sortable: false,
        format: (val: unknown) => val ? 'üñºÔ∏è' : '',
      },
      {
        name: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
        field: 'title',
        required: true,
        align: 'left',
        sortable: true,
      },
      {
        name: 'subtitle',
        label: '–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫',
        field: 'subtitle',
        required: true,
        align: 'left',
        sortable: true,
        format: (val: unknown) => {
          const str = String(val)

          return str.length > 40 ? str.substring(0, 40) + '...' : str
        },
      },
      {
        name: 'actions',
        label: '–î–µ–π—Å—Ç–≤–∏—è',
        field: 'actions',
        align: 'center',
      },
    ],
  },

  // –ü—Ä–∏–º–µ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  users: {
    name: 'users',
    label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    icon: 'people',
    searchable: true,
    sortable: true,
    fields: [
      {
        name: 'email',
        label: 'Email',
        type: 'email',
        required: true,
        placeholder: 'user@example.com',
      },
      {
        name: 'name',
        label: '–ò–º—è',
        type: 'text',
        required: true,
        placeholder: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      },
      {
        name: 'phone',
        label: '–¢–µ–ª–µ—Ñ–æ–Ω',
        type: 'text',
        placeholder: '+7 (999) 123-45-67',
      },
      {
        name: 'role',
        label: '–†–æ–ª—å',
        type: 'text',
        placeholder: 'user, admin, moderator',
      },
      {
        name: 'active',
        label: '–ê–∫—Ç–∏–≤–Ω—ã–π',
        type: 'boolean',
      },
    ],
    columns: [
      {
        name: 'email',
        label: 'Email',
        field: 'email',
        required: true,
        align: 'left',
        sortable: true,
      },
      {
        name: 'name',
        label: '–ò–º—è',
        field: 'name',
        align: 'left',
        sortable: true,
      },
      {
        name: 'role',
        label: '–†–æ–ª—å',
        field: 'role',
        align: 'center',
        sortable: true,
      },
      {
        name: 'active',
        label: '–ê–∫—Ç–∏–≤–Ω—ã–π',
        field: 'active',
        align: 'center',
        format: (val: unknown) => (val ? '–î–∞' : '–ù–µ—Ç'),
      },
      {
        name: 'actions',
        label: '–î–µ–π—Å—Ç–≤–∏—è',
        field: 'actions',
        align: 'center',
      },
    ],
  },
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ –∏–º–µ–Ω–∏
 */
export const getCollectionConfig = (
  name: string
): CollectionConfig | undefined => {
  return collectionsConfig[name]
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
 */
export const getAllCollections = (): CollectionConfig[] => {
  return Object.values(collectionsConfig)
}
