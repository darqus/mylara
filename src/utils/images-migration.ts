/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Firebase Storage URL –≤ base64
 *
 * –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏.
 * –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –∫–æ–Ω—Å–æ–ª—å:
 *
 * 1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
 * 2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)
 * 3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: await window.imagesMigration.migrateAllImages()
 */

import { useBase64Image } from 'src/composables/useBase64Image'

type CollectionItem = {
  id: string
  img?: string
  [key: string]: unknown
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
 */
export async function convertImageUrlToBase64(
  imageUrl: string,
  options?: {
    maxWidth?: number
    maxHeight?: number
    quality?: number
  }
): Promise<string | null> {
  try {
    const { fileToBase64 } = useBase64Image()

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ Blob
    const response = await fetch(imageUrl)

    if (!response.ok) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', response.statusText)

      return null
    }

    const blob = await response.blob()

    // –°–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç –∏–∑ Blob
    const file = new File([blob], 'image.jpg', { type: blob.type })

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64 —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–∂–∞—Ç–∏—è
    const result = await fileToBase64(file, {
      maxWidth: options?.maxWidth ?? 1200,
      maxHeight: options?.maxHeight ?? 800,
      quality: options?.quality ?? 0.85,
    })

    return result?.base64 ?? null
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64:', error)

    return null
  }
}

/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
 */
async function migrateCollection(
  collectionName: string,
  imageOptions: { maxWidth: number; maxHeight: number; quality: number }
) {
  const { firestoreService } = await import('src/services/firestore.service')

  const response =
    await firestoreService.getCollection<CollectionItem>(collectionName)

  if (response.error) {
    console.error(
      `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collectionName}:`,
      response.error
    )

    return
  }

  const { items } = response

  // eslint-disable-next-line no-console
  console.log(`–ù–∞–π–¥–µ–Ω–æ ${items.length} –∑–∞–ø–∏—Å–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collectionName}`)

  for (const item of items) {
    if (
      item.img &&
      typeof item.img === 'string' &&
      item.img.startsWith('http')
    ) {
      // eslint-disable-next-line no-console
      console.log(`–ú–∏–≥—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ ${item.id}...`)

      const base64Image = await convertImageUrlToBase64(item.img, imageOptions)

      if (base64Image) {
        await firestoreService.updateDocument(collectionName, item.id, {
          ...item,
          img: base64Image,
        })
        // eslint-disable-next-line no-console
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å ${item.id}`)
      } else {
        console.error(
          `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ ${item.id}`
        )
      }
    }
  }

  // eslint-disable-next-line no-console
  console.log(`üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ${collectionName} –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`)
}

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ carousel
 */
export async function migrateCarouselImages() {
  await migrateCollection('carousel', {
    maxWidth: 1200,
    maxHeight: 800,
    quality: 0.85,
  })
}

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ slides
 */
export async function migrateSlidesImages() {
  await migrateCollection('slides', {
    maxWidth: 1920,
    maxHeight: 1080,
    quality: 0.9,
  })
}

/**
 * –ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –æ–±–µ–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
 */
export async function migrateAllImages() {
  // eslint-disable-next-line no-console
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ base64...')

  await migrateCarouselImages()
  await migrateSlidesImages()

  // eslint-disable-next-line no-console
  console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
if (typeof window !== 'undefined') {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ;(window as any).imagesMigration = {
    migrateCarouselImages,
    migrateSlidesImages,
    migrateAllImages,
    convertImageUrlToBase64,
  }
}
